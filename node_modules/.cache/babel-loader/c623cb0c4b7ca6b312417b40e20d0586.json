{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\manpe\\\\Documents\\\\year 2\\\\sem 1\\\\react projects\\\\multiplayer-tic-tac-toe\\\\src\\\\client\\\\components\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport Board from \"../components/Board\";\nimport \"./Game.css\";\nlet socket = io(\"http://localhost:8000\", {\n  withCredentials: true\n}); //const socket = io.connect('http://localhost:3000');\n\nconst Game = ({\n  location\n}) => {\n  _s();\n\n  const [yourTurn, setYourTurn] = useState(queryString.parse(location.search).turn === '1' ? true : false);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xPlayer, setXPlayer] = useState('');\n  const [oPlayer, setOPlayer] = useState('');\n  const [status, setStatus] = useState('');\n  const [name, setName] = useState(queryString.parse(location.search).name);\n  const [room, setRoom] = useState(queryString.parse(location.search).room);\n  const [users, setUsers] = useState(''); //const users = useRef();\n\n  const [flag, setFlag] = useState(0);\n  const [moves, setMoves] = useState(undefined);\n  const ENDPOINT = \"http://localhost:8000\"; //const users2 = users.slice();\n\n  let count = 10;\n  useEffect(() => {\n    //const { name, room } = queryString.parse(location.search);\n    socket = io.connect(ENDPOINT);\n    const square = squares.slice(); //setName(queryString.parse(location.search).name);\n\n    console.log(yourTurn);\n    socket.emit(\"join\", {\n      name: queryString.parse(location.search).name,\n      room: queryString.parse(location.search).room\n    }, error => {\n      if (error) {\n        setFlag(1);\n        alert(error);\n      }\n    });\n    /*socket.on(\"move\", (data) => {\r\n      console.log(data.move);\r\n    });*/\n    //setRoom(room);\n\n    socket.on('move', ({\n      move,\n      location\n    }) => {\n      square[location] = move;\n      setSquares(move); //setStepNumber(stepNumber + 1);\n      //stepNumber === 8 && setStatus(\"Tie\");\n\n      /*for(let m = 0; m<9; m++) {\r\n        move[m] !== null && setStatus('Tie');\r\n      }*/\n\n      console.log(squares);\n      console.log(move); //console.log(turn);\n\n      console.log(name);\n      console.log(users.length); //console.log(stepNumber);\n\n      count -= 1;\n      console.log(count);\n    });\n    socket.on('turn', turn => {\n      setYourTurn(true);\n      setStatus('It is your turn');\n      console.log(yourTurn);\n    });\n    socket.on('roomData', ({\n      pp\n    }) => {\n      const userList = pp.slice(0, 2);\n      setUsers('');\n      setUsers(userList); //console.log(userList);\n\n      setStatus(`It is ${userList[0].name}'s turn`);\n      setXPlayer(userList[0].name);\n      setOPlayer(userList[1].name); //console.log(pp[1].name);\n      //console.log(pp[0].name);\n      //console.log(socket.id);\n    });\n  }, [ENDPOINT, location.search]);\n  /*useEffect(() => {\r\n      socket.on('roomData', ({ users }) => {\r\n          setUsers(users);\r\n          console.log(users);\r\n      })\r\n  }, []);*/\n\n  const handleClick = i => {\n    const square = squares.slice();\n    const win = winner(square);\n\n    if (win || squares[i]) {\n      return;\n    }\n\n    if (yourTurn && squares[i] === null) {\n      square[i] = queryString.parse(location.search).turn === '1' ? 'X' : 'O';\n      setSquares(square); //setStepNumber(stepNumber + 1);\n\n      setYourTurn(false); //!playerXTurn ? setStatus(\"It is X's turn\") : setStatus(\"It is O's turn\");\n    } //squares[i] === null ? (squares[i] = this.state.playerXTurn ? 'X' : 'O';) : this.setState({status: 'Please select another tile'});\n    //squares[i] === 'X' ? this.setState({playerXTurn: !playerXTurn}) : this.setState({playerXTurn: })\n\n\n    if (win) {\n      setStatus(\"\");\n    }\n\n    socket.emit(\"move\", {\n      room: queryString.parse(location.search).room,\n      move: square,\n      location: i,\n      stepNumber: stepNumber\n    });\n    socket.emit('turn', {\n      room: room\n    }); //set status after sending move to be other player's name\n\n    if (name === users[0].name) {\n      setStatus(`It is ${users[1].name}'s turn`);\n    } else if (name === users[1].name) {\n      setStatus(`It is ${users[0].name}'s turn`);\n    }\n  };\n\n  const handleReset = () => {\n    socket.emit('playAgain', {\n      room: room,\n      name: name,\n      id: socket.id\n    });\n  };\n\n  const winner = squares => {\n    const win = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < win.length; i++) {\n      const [a, b, c] = win[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  };\n\n  let victory;\n  const win = winner(squares);\n\n  if (win) {\n    victory = \"The winner is pp\";\n  } else if (count === 0) {\n    victory = 'Tie';\n  } //console.log(queryString.parse(location.search).room);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Board, {\n          onClick: i => handleClick(i),\n          squares: squares\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), win ? /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"feedback\",\n          className: \"status\",\n          children: victory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status\",\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"win\",\n          children: [(win || stepNumber === 9) && /*#__PURE__*/_jsxDEV(Link, {\n            onClick: handleReset(),\n            to: `/waitingRoom/${room}?name=${name}&room=${room}`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'button mt-20',\n              children: \"Play Again?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), (win || stepNumber === 9) && /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button2\",\n              children: \"Exit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"TgkAhUhAotyrkORajkveMDa/+Nk=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Users/manpe/Documents/year 2/sem 1/react projects/multiplayer-tic-tac-toe/src/client/components/Game.js"],"names":["React","useState","useEffect","useRef","Link","queryString","io","Board","socket","withCredentials","Game","location","yourTurn","setYourTurn","parse","search","turn","squares","setSquares","Array","fill","stepNumber","setStepNumber","xPlayer","setXPlayer","oPlayer","setOPlayer","status","setStatus","name","setName","room","setRoom","users","setUsers","flag","setFlag","moves","setMoves","undefined","ENDPOINT","count","connect","square","slice","console","log","emit","error","alert","on","move","length","pp","userList","handleClick","i","win","winner","handleReset","id","a","b","c","victory"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport Board from \"../components/Board\";\r\nimport \"./Game.css\";\r\n\r\nlet socket = io(\"http://localhost:8000\", {\r\n  withCredentials: true,\r\n});\r\n//const socket = io.connect('http://localhost:3000');\r\n\r\nconst Game = ({ location }) => {\r\n  const [yourTurn, setYourTurn] = useState((queryString.parse(location.search).turn === '1' ? true : false));\r\n  const [squares, setSquares] = useState(Array(9).fill(null));\r\n  const [stepNumber, setStepNumber] = useState(0);\r\n  const [xPlayer, setXPlayer] = useState('');\r\n  const [oPlayer, setOPlayer] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [name, setName] = useState(queryString.parse(location.search).name);\r\n  const [room, setRoom] = useState(queryString.parse(location.search).room);\r\n  const [users, setUsers] = useState('');\r\n  //const users = useRef();\r\n  const [flag, setFlag] = useState(0);\r\n  const [moves, setMoves] = useState(undefined);\r\n  const ENDPOINT = \"http://localhost:8000\";\r\n  //const users2 = users.slice();\r\n  let count = 10;\r\n\r\n  useEffect(() => {\r\n    //const { name, room } = queryString.parse(location.search);\r\n\r\n    socket = io.connect(ENDPOINT);\r\n    const square = squares.slice();\r\n    \r\n    //setName(queryString.parse(location.search).name);\r\n    \r\n    console.log(yourTurn);\r\n\r\n    socket.emit(\r\n      \"join\",\r\n      {\r\n        name: queryString.parse(location.search).name,\r\n        room: queryString.parse(location.search).room,\r\n      },\r\n      (error) => {\r\n        if (error) {\r\n          setFlag(1);\r\n          alert(error);\r\n        }\r\n      }\r\n    );\r\n    /*socket.on(\"move\", (data) => {\r\n      console.log(data.move);\r\n    });*/\r\n    //setRoom(room);\r\n\r\n    socket.on('move', ({ move, location }) => {\r\n        square[location] = move;\r\n        setSquares(move);\r\n        //setStepNumber(stepNumber + 1);\r\n        \r\n         \r\n        //stepNumber === 8 && setStatus(\"Tie\");\r\n        /*for(let m = 0; m<9; m++) {\r\n          move[m] !== null && setStatus('Tie');\r\n        }*/\r\n        console.log(squares);\r\n        console.log(move);\r\n        //console.log(turn);\r\n        console.log(name);\r\n        console.log(users.length);\r\n        //console.log(stepNumber);\r\n        count-=1;\r\n        console.log(count);\r\n    });\r\n\r\n    socket.on('turn', (turn) => {\r\n      setYourTurn(true); \r\n      setStatus('It is your turn');\r\n      console.log(yourTurn);\r\n      \r\n    });\r\n    \r\n\r\n    socket.on('roomData', ({ pp }) => {\r\n      const userList = pp.slice(0,2);\r\n      setUsers('');\r\n      setUsers(userList);\r\n      //console.log(userList);\r\n      setStatus(`It is ${userList[0].name}'s turn`)\r\n      setXPlayer(userList[0].name);\r\n      setOPlayer(userList[1].name);\r\n      //console.log(pp[1].name);\r\n      //console.log(pp[0].name);\r\n      //console.log(socket.id);\r\n        \r\n    });\r\n\r\n  }, [ENDPOINT, location.search]);\r\n\r\n    /*useEffect(() => {\r\n        socket.on('roomData', ({ users }) => {\r\n            setUsers(users);\r\n            console.log(users);\r\n        })\r\n    }, []);*/\r\n\r\n  const handleClick = (i) => {\r\n    const square = squares.slice();\r\n    const win = winner(square);\r\n    \r\n\r\n    if (win || squares[i]) {\r\n      return;\r\n    }\r\n\r\n    if (yourTurn && (squares[i] === null)) {\r\n      square[i] = (queryString.parse(location.search).turn === '1') ? 'X' : 'O'\r\n      setSquares(square);\r\n      //setStepNumber(stepNumber + 1);\r\n      setYourTurn(false);\r\n      //!playerXTurn ? setStatus(\"It is X's turn\") : setStatus(\"It is O's turn\");\r\n    }\r\n    //squares[i] === null ? (squares[i] = this.state.playerXTurn ? 'X' : 'O';) : this.setState({status: 'Please select another tile'});\r\n    //squares[i] === 'X' ? this.setState({playerXTurn: !playerXTurn}) : this.setState({playerXTurn: })\r\n\r\n    if (win) {\r\n      setStatus(\"\");\r\n    }\r\n\r\n    socket.emit(\"move\",  {\r\n      room: queryString.parse(location.search).room,\r\n      move: square,\r\n      location: i,\r\n      stepNumber: stepNumber\r\n    });\r\n\r\n    socket.emit('turn', {\r\n      room: room,\r\n    });\r\n    \r\n    //set status after sending move to be other player's name\r\n    if(name === users[0].name){\r\n      setStatus(`It is ${users[1].name}'s turn`)\r\n    }\r\n    else if(name === users[1].name) {\r\n      setStatus(`It is ${users[0].name}'s turn`)\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    socket.emit('playAgain', {\r\n      room: room,\r\n      name: name,\r\n      id: socket.id\r\n    })\r\n  };\r\n\r\n  const winner = (squares) => {\r\n    const win = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n\r\n    for (let i = 0; i < win.length; i++) {\r\n      const [a, b, c] = win[i];\r\n      if (\r\n        squares[a] &&\r\n        squares[a] === squares[b] &&\r\n        squares[b] === squares[c]\r\n      ) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  let victory;\r\n  const win = winner(squares);\r\n  if (win) {\r\n    victory = \"The winner is pp\";\r\n  }\r\n  else if(count === 0) {\r\n    victory = 'Tie';\r\n  }\r\n\r\n  //console.log(queryString.parse(location.search).room);\r\n\r\n  return (\r\n    <div className='body'>\r\n      <div className='game'>\r\n        <div>\r\n          <Board onClick={(i) => handleClick(i)} squares={squares} />\r\n          <br />\r\n          {win ? (\r\n            <div id='feedback' className='status'>\r\n              {victory}\r\n            </div>\r\n          ) : (\r\n            <div className='status'>{status}</div>\r\n          )}\r\n          <br />\r\n\r\n          <div className='win'>\r\n            {(win || stepNumber === 9) && (\r\n              <Link onClick={handleReset()} to={`/waitingRoom/${room}?name=${name}&room=${room}`} >\r\n                    <button className ={'button mt-20'}>Play Again?</button>\r\n              </Link>\r\n            )}\r\n            <br></br>\r\n            <br></br>\r\n            {(win || stepNumber === 9) && (\r\n              <Link to={\"/\"}>\r\n                <button className='button2'>Exit</button>\r\n              </Link>\r\n            )}\r\n          </div>\r\n          <br></br>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}